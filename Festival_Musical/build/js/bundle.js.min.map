{"version":3,"sources":["app.js","galeria.js"],"names":["navegacionFija","barra","document","querySelector","IntersectionObserver","entries","isIntersecting","classList","remove","add","observe","scrolNav","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","target","attributes","href","value","scrollIntoView","behavior","crearGaleria","galeria","i","imagen","createElement","src","dataset","imagenId","onclick","mostrarImagen","lista","appendChild","id","parseInt","overlay","cerrarImagen","textContent","body"],"mappings":"AAMA,SAAAA,iBAEA,MAAAC,EAAAC,SAAAC,cAAA,WASA,IAAAC,sBAAA,SAAAC,GAGAA,EAAA,GAAAC,eAEAL,EAAAM,UAAAC,OAAA,QAGAP,EAAAM,UAAAE,IAAA,WAMAC,QAAAR,SAAAC,cAAA,qBAGA,SAAAQ,WACAT,SAAAU,iBAAA,2BAcAC,SAAA,SAAAC,GAGAA,EAAAC,iBAAA,SAAA,SAAAC,GACAA,EAAAC,iBAIAf,SAAAC,cAAAa,EAAAE,OAAAC,WAAAC,KAAAC,OACAC,eAAA,CACAC,SAAA,iBCvDA,SAAAC,eACA,MAAAC,EAAAvB,SAAAC,cAAA,qBAEA,IAAA,IAAAuB,EAAA,EAAAA,GAAA,GAAAA,IAAA,CACA,MAAAC,EAAAzB,SAAA0B,cAAA,OACAD,EAAAE,IAAA,mBAAAH,SAIAC,EAAAG,QAAAC,SAAAL,EACAC,EAAAK,QAAAC,cAEA,MAAAC,EAAAhC,SAAA0B,cAAA,MACAM,EAAAC,YAAAR,GAEAF,EAAAU,YAAAD,IAIA,SAAAD,cAAAjB,GAGA,MAAAoB,EAAAC,SAAArB,EAAAE,OAAAY,QAAAC,UAEAJ,EAAAzB,SAAA0B,cAAA,OACAD,EAAAE,IAAA,oBAAAO,SAIA,MAAAE,EAAApC,SAAA0B,cAAA,OACAU,EAAAH,YAAAR,GACAW,EAAA/B,UAAAE,IAAA,WAGA,MAAA8B,EAAArC,SAAA0B,cAAA,KACAW,EAAAC,YAAA,IACAD,EAAAhC,UAAAE,IAAA,cAEA6B,EAAAH,YAAAI,GAEA,MAAAE,EAAAvC,SAAAC,cAAA,QACAsC,EAAAN,YAAAG,GACAG,EAAAlC,UAAAE,IAAA,cAGA8B,EAAAP,QAAA,WACAM,EAAA9B,UAIA8B,EAAAN,QAAA,WACAM,EAAA9B,UDvDAN,SAAAa,iBAAA,oBAAA,WACAJ,WAEAX,oBCHAE,SAAAa,iBAAA,oBAAA,WACAS","file":"bundle.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n  scrolNav();\r\n\r\n  navegacionFija();\r\n});\r\n\r\nfunction navegacionFija() {\r\n\r\n    const barra = document.querySelector('.header');\r\n\r\n    /**\r\n     * Intersection Observer.- es una Api que funciona en 2 partes:\r\n     * el primero es Registrar el Intersection Observer\r\n     * el otro es el elemento observar\r\n     */\r\n\r\n     // Registrar el Intersection Observer \r\n     const observer = new IntersectionObserver( function(entries) { // entries nos va a dar la informacion del elemento a observar y se pasa automaticamente como el evento(e)\r\n        // console.log(entries[0]);\r\n\r\n        if(entries[0].isIntersecting) {\r\n            // console.log('Elemento visible');\r\n            barra.classList.remove('fijo');\r\n        } else {\r\n            // console.log('Ya desaparecio');\r\n            barra.classList.add('fijo');\r\n        }\r\n     });\r\n\r\n     // Elemento a observar\r\n    //  observer.observe(document.querySelector('.sobre-festival'));\r\n     observer.observe(document.querySelector('.contenido-video'));\r\n}\r\n\r\nfunction scrolNav() {\r\n  const enlaces = document.querySelectorAll(\".navegacion-principal a\");\r\n  // console.log(enlaces);\r\n\r\n  /**\r\n     * Lo siguiente marcará de error al registrar un evento de evenListenner \r\n     * al dar click a un enlace queremos ejecutar un codigo javascript, sim embargo como se menciona lo siguiente marcará error: \r\n      \r\n       enlaces.addEventListener('click', function() {\r\n\r\n    });\r\n    \r\n    * No se puede registrar un eventListenner a un listado de varios elementos, tiene que se a un solo elemento\r\n    */\r\n\r\n  enlaces.forEach(function (enlace) {\r\n    // console.log(enlace);\r\n    //Ahora sí podemos atar el evento que tratamos de hacer en el codigo comentado arriba\r\n    enlace.addEventListener(\"click\", function (e) {\r\n      e.preventDefault(); // prevenimos el evento que tiene por default\r\n\r\n      // console.log(e.target.attributes.href.value);\r\n\r\n      const seccion = document.querySelector(e.target.attributes.href.value); // queryselector porque estamos iterando en cada uno de los elementos\r\n      seccion.scrollIntoView({\r\n          behavior: 'smooth'\r\n      }); \r\n      /**\r\n       * con scrollIntoView volvemos a tener el efecto que teniamos al principio al dar click en el enlace, \r\n         pudieramos decir que ese es el metodo por default que tiene.\r\n       * podemos pasarle un objeto de configuracion y de esa manera modificar el efecto, que solo tiene 2 al parecer,\r\n         uno es el que tiene por defecto y el otro es smooth\r\n      */ \r\n    });\r\n  });\r\n}\r\n","document.addEventListener('DOMContentLoaded', function() {\r\n    crearGaleria();\r\n});\r\n\r\nfunction crearGaleria() {\r\n    const galeria = document.querySelector('.galeria-imagenes');\r\n\r\n    for(let i = 1; i <= 12; i++) {\r\n        const imagen = document.createElement('IMG');\r\n        imagen.src = `build/img/thumb/${i}.webp`\r\n        // console.log(imagen);\r\n        \r\n        //Añadir la funcion de mostrarImagen\r\n        imagen.dataset.imagenId = i; // con esto se agrega un atributo que sería como: data-imagen-id, los stributos con data- son atributos de html5\r\n        imagen.onclick = mostrarImagen;\r\n\r\n        const lista = document.createElement('LI');\r\n        lista.appendChild(imagen);\r\n\r\n        galeria.appendChild(lista);\r\n    }\r\n}\r\n\r\nfunction mostrarImagen(e) {\r\n    // console.log('Diste click en una imagen');\r\n    // console.log(e.target.dataset.imagenId);\r\n    const id = parseInt(e.target.dataset.imagenId);\r\n    // Generar la imagen\r\n    const imagen = document.createElement('IMG'); // la constante en una funcion unicamente tiene el alcance de esa funcion, por eso aqui podemos crear la constante imagen aunque ya este repetida porque ya es otra funcion\r\n    imagen.src = `build/img/grande/${id}.webp`;\r\n    // console.log(imagen);\r\n\r\n    // crear un div donde se mostrará la imagen\r\n    const overlay = document.createElement('DIV');\r\n    overlay.appendChild(imagen);\r\n    overlay.classList.add('overlay');\r\n\r\n    // Boton para cerrar la imagen\r\n    const cerrarImagen = document.createElement('P');\r\n    cerrarImagen.textContent = 'X';\r\n    cerrarImagen.classList.add('btn-cerrar');\r\n\r\n    overlay.appendChild(cerrarImagen);\r\n    //mostrar en el HTML\r\n    const body = document.querySelector('body');\r\n    body.appendChild(overlay);\r\n    body.classList.add('fijar-body');\r\n\r\n    // Cuando se presiona en la X, se cierra la imagen\r\n    cerrarImagen.onclick = function() {\r\n        overlay.remove();\r\n    }\r\n\r\n    // Cuando se da click en el mismo overlay, cerrar la imagen\r\n    overlay.onclick = function() {\r\n        overlay.remove();\r\n    }\r\n\r\n}"]}